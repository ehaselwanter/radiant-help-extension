= Help

This extension provides documentation for Radiant and any registered extensions.

Installing Help is as easy as any other Radiant extension. Drop it into your vendor/extensions directory and:

rake radiant:extensions:help:migrate

The Help extension creates the 'helpful_extensions' and 'helps' tables into which other extensions may provide their documentation. Once the extension is installed, you must ensure that your application will load the Help extension before loading any registered extensions. To do so, edit your config/environment.rb to load Help first:

Radiant::Initializer.run do |config|
...
	config.extensions = [ :help, :all ] 
...
end

Help provides basic information for the average user at admin/help, but also provides documentation for tasks and features available to developers and admins at admin/help/developing and admin/help/administering.

== Extensions using Help

If you're building an extension that takes advantage of Help, there are 2 ways to provide help to your users: database registered help, and partial injection based help.

=== Database Registered Help

Registering your help documentation in the database presents your information in a list of "Additional Features." You can register your help information in the database with:

	HelpfulExtension.register()

You may then add information to your registered extension with:

	Help.create()
	
This, for example, would go in a migration for your extension:

    @my_help = HelpfulExtension.register(:name => 'Featured_Pages', :author_name => 'Saturn Flyer', :author_contact => 'http://www.saturnflyer.com')
    @my_help.helps.create(:topic => 'Selecting Pages to Feature', :description => 'You may select a page to appear in your Featured Pages by going to the edit screen for the desired page and checking the box "Featured page".')

The :name that you choose will be used in the url, so using an underscore in place of a space may make more attractive URLs.

Help views are currently processed in HAML, so you can enter information into the description that HAML will understand. See http://haml.hamptoncatlin.com/docs/rdoc/classes/Haml.html for more info.

You may unregister your extension (thereby deleting all help information in the database) by using:

	HelpfulExtension.unregister('Featured_Pages')

=== Partial Injection Based Help

You may inject partials into the interface by adding code such this into your extension's activate method:

    admin.help.index.add :main, "client_welcome", :before => "introduction"

* "admin.help.index" refers to the main help page (the help index) and ".add" is called to add information to the section provided in the next argument. 
* ":main" is the argument that specifies which section will receive your partial. 
* "client_welcome" is the partial that you want to add and should be located in your extension directory app/views/admin/help/_client_welcome.html.haml
* :before => "introduction" will place your partial before the introduction region (or you could do :after). This is optional, and if left out, your partial will be appended to the ":main" section.

For a list of all of the regions provided by Help, see help_extension.rb around line 42, and app/views/admin/index.html.haml for details about where they appear.

When adding your partials, you may specify inline decisions about whom should see your documentation with the admin_help and developer_help helper methods. These can be used in your HAML by doing:

  - admin_help do
    %p Hello Madame Admin!
  - developer_help do
    %p You are special, Mr. Developer.

Those helper methods make use of the admin? and developer? helpers provided by Radiant. The blocks of text will only be shown to the user if they are in those roles, but keep in mind that currently developer? returns true if the user is selected only as an admin (meaning developer_help will be seen by developers and admins).

Some content taken from http://radiantcms.org/[http://radiantcms.org/]

Built by Saturn Flyer http://www.saturnflyer.com[http://www.saturnflyer.com]